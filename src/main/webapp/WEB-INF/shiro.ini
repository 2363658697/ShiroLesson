# =======================
# Shiro INI configuration
# =======================

[main]

authc.loginUrl=/login.html
#认证（输入用户名和密码登录）不通过 跳转到loginUrl
roles.loginUrl=/login.html
#授权 (没有某个角色和权限) 不通过 
roles.unauthorizedUrl=/fail.jsp
perms.loginUrl=/login.html
#授权 (没有某个角色和权限) 不通过 
perms.unauthorizedUrl=/fail.jsp  



[users]
# 设置用户信息
# 语法是 username = password, roleName1, roleName2, …, roleNameN
root = 123456,role1

[roles]
# 角色信息和角色拥有的权限
#语法是 rolename = permissionDefinition1, permissionDefinition2, …, permissionDefinitionN
#权限的语法 * 表示所有权限  一般语法是 权限类型.权限动作.权限的资源id  比如  user:delete:1 表示拥有删除1号用户的权限  user:delete:*表示删除所有用户权限
admin = *
role1 = user:query:*, user:delete:1

[urls]
# web中的url过滤

#语法：  某个路径  = 过滤1，过滤2   常用的过滤有 ： 
#  anon 匿名用戶   
#  authc 表示用户和密码验证通过， 类 org.apache.shiro.web.filter.authc.FormAuthenticationFilter 没有登录跳转到登录页面
#  perms 是否拥有某些权限过虑 類 org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter 用法 perms["remote:invoke"]  
#   roles是否拥有某个角色   org.apache.shiro.web.filter.authz.RolesAuthorizationFilter  用法roles[administrator]  
#  user 是否是某个用戶 org.apache.shiro.web.filter.authc.UserFilter   
# 也可以在main中自定义filter url就可以应用 參考http://shiro.apache.org/web.html#programmatic-support  

/login.html=anon
# /pass.jsp=perms[user:delete:2]

/pass.jsp=authc
# /pass.jsp=roles[role2]

